#+title: The Leverage Effect
#+author: Matt Brigida, Ph.D.
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+HTML_HEAD: <style>pre.src{background:#343131;color:white;} </style>
#+PROPERTY: header-args    :exports none

The *Leverage Effect* is the observation that the volatility of an asset is decreasing in the asset price.  That is, if an asset falls in price the asset's volatility increases, and if it rises in price the asset's volatility declines.  So another way of saying this is the asset's returns and volatility are negatively correlated.  

This observation was first made by Fischer Black (of the Black-Scholes model) in a research paper (Black (1976)).  In this paper he coined the /leverage effect/ after his explanation for the phenomena.  Black hypothesized that stock declines increase leverage, and it is the increased leverage which causes the increased volatility.  Empirical evidence, however, generally [[https://papers.ssrn.com/sol3/papers.cfm?abstract_id=256109][doesn't support this leverage explanation of the /Leverage Effect/]].  The phenomena tends to occur in down markets, though not when leverage changes for other reasons.

Below we take a look at the relationship between stock prices and both implied and historical volatility.

We'll use data from Yahoo Finance:

#+begin_src python :session lev :eval no
import yfinance as yf
#+end_src

#+begin_src python :session lev :eval yes
import pandas as pd
#+end_src

#+RESULTS:


* Implied Volatility

Below we'll take a look at the relationship between changes in the S&P 500 index, and changes in the VIX.  The VIX measures implied volatility in options on the S&P 500.

#+name: get_vix
#+begin_src python :session lev :eval no
vix = yf.Ticker("^VIX")

# get historical market data
vix_hist = vix.history(period="max")
#+end_src

#+RESULTS:

#+name:get_spy
#+begin_src python :session lev :eval no
sp = yf.Ticker("^GSPC")

# get historical market data
sp_hist = sp.history(period="max")
#+end_src

#+RESULTS: get_spy


#+begin_src python :session lev :eval no
vix_hist.to_csv("vix_data.csv")
sp_hist.to_csv("sp_data.csv")
#+end_src

#+RESULTS:
: None

#+begin_src python :session lev
vix_data = pd.read_csv("./vix_data.csv")
sp_data = pd.read_csv("./sp_data.csv")
#+end_src

#+RESULTS:

#+begin_src python :session lev 
vix_data.index = pd.to_datetime(vix_data['Date'])
sp_data.index = pd.to_datetime(sp_data['Date'])
vix_returns = vix_data['Close'].pct_change()[1:]
sp_returns = sp_data['Close'].pct_change()[1:]
returns = pd.concat([sp_returns, vix_returns], axis=1)
returns.dropna(axis = 0, how = 'any', inplace = True)
returns.columns = ['SP500', 'VIX']
#+end_src

#+RESULTS:


#+begin_src python :session lev :eval no
import plotly.express as px
fig = px.scatter(returns, x="SP500", y="VIX", template='plotly_dark')
fig.write_html('./implied_vol.html')
#+end_src

#+RESULTS:
: None

Daily returns from 1/3/1990 to 9/2/2022.

#+begin_export html
<iframe src="./implied_vol.html" width="100%" height="800" style="border:none;">
</iframe>
#+end_export

#+begin_src python :session lev :eval no
from scipy import stats
slope, intercept, r, p, se = stats.linregress(returns['SP500'], returns['VIX'])
#+end_src

#+RESULTS:

In fact, fitting a regression line affords a slope of -4.31, implying a 1% decline in the S&P 500 means a 4.31% increase in the VIX.

* Historical Volatility


** Scatterplots

To calculate historical volatility we'll group the data by week, and calculate the realized weekly volatility.

#+begin_src python :session lev
returns['date'] = returns.index 
weekly_returns = returns.resample('W', on='date')['SP500'].sum()
weekly_vol = returns.resample('W', on='date')['SP500'].std()
## weekly data------
weekly_data = pd.concat([weekly_returns, weekly_vol], axis=1)
weekly_data.columns = ['returns', 'vol']
weekly_data['lagged_vol'] = weekly_data['vol'].shift(1)
#+end_src

#+RESULTS:


#+begin_src python :session lev :eval yes
import plotly.express as px
fig2 = px.scatter(weekly_data, x="returns", y="lagged_vol", template='plotly_dark')
fig2.write_html('./realized_vol.html')
#+end_src

#+RESULTS:
: None

Weekly returns and realized volatility from 1/3/1990 to 9/2/2022.  Scatter plots for both realized volatility and its lag show no relationship with weekly returns. 

#+begin_export html
<iframe src="./realized_vol.html" width="100%" height="800" style="border:none;">
</iframe>
#+end_export

#+begin_src python :session lev :eval yes
slope, intercept, r, p, se = stats.linregress(weekly_data['returns'], weekly_data['vol'])
#+end_src

#+RESULTS:

** EGARCH

An EGARCH(1,1) model with normally-distributed innovations takes the form:

$$r_t = \sigma_t\epsilon_t$$

and

$$ln(\sigma_t^2) = (1 - \alpha_1)\alpha_0 + \alpha_1ln(\sigma^2_{t-1})+g(\epsilon_{t-1})$$

where

$$g(\epsilon_{t-1}) = \theta\epsilon_{t-1} + \gamma(|\epsilon_{t-1}| - \sqrt{2/\pi})$$

The ($\gamma + \theta$) and ($\gamma + \theta$) coefficients measure the asymmetry in the response of volatility to $r_{t-1}$.  If volatility increases when an asset price declines, then we'll observe $\theta < 0$. The model is nonlinear so long as $\theta \neq 0$ however.

We'll use the =arch= python package to estimate the parameters of an EGARCG(1,1) model.
